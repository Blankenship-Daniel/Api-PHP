/******************************************************************************
 * Scalable and Modular Architecture for CSS
 *
 * This is a demo project utilizing the smacss ideology. You can find out more
 *  about smacss by visiting: https://smacss.com/
 *
 * There are five types of categories:
 *  1. Base
 *  2. Layout
 *  3. Module
 *  4. State
 *  5. Theme
 *****************************************************************************/
/**
 * Retrieves a color value from the $material-colors Sass map
 * Inspired by https://github.com/nilskaspersson/Google-Material-UI-Color-Palette/
 *
 * @function
 * @param {string} color-name             - quoted, lower-case, dasherized color
 *                                          name (e.g. 'pink', 'amber')
 * @param {string} [color-variant='500']  - quoted, lowercase color variant (e.g.
 *                                          '200', 'a100')
 */
/******************************************************************************
 * Globals
 *****************************************************************************/
/******************************************************************************
 * Base
 *
 * Base rules are the defaults. They are almost exclusively single element
 *  selectors but it could include attribute selectors, pseudo-class selectors,
 *  child selectors. Essentially, a base style says that wherever this element
 *  is on the page, it should look like this.
 *
 * Examples of Base Styles:
 *  html, body, form { margin: 0; padding: 0; }
 *  input[type=text] { border: 1px solid #999; }
 *  a { color: #039; }
 *  a:hover { color: #03C; }
 *****************************************************************************/
* {
  box-sizing: border-box; }

html, body {
  min-height: 100%;
  background: #e0e0e0; }

body {
  font-family: "Montserrat", sans-serif; }

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "Lato", sans-serif; }

a {
  color: inherit; }

img {
  padding: 1.5em 0; }

/******************************************************************************
 * Layout
 *
 * Layout rules divide the page into sections. Layouts hold one or more
 *  modules together.
 *
 * These rules are prefixed with lyt- for clarity.
 *****************************************************************************/
.boxed {
  border-radius: 5px;
  -moz-border-radius: 5px;
  -webkit-border-radius: 5px;
  box-shadow: 3px 2px 14px -5px rgba(0, 0, 0, 0.75);
  -moz-box-shadow: 3px 2px 14px -5px rgba(0, 0, 0, 0.75);
  -webkit-box-shadow: 3px 2px 14px -5px rgba(0, 0, 0, 0.75);
  background: #fff;
  padding: 2em;
  margin: 2em 0;
  border: 1px solid #eee; }
  .boxed.no-style {
    background: none;
    box-shadow: none;
    -moz-box-shadow: none;
    -webkit-box-shadow: none;
    border: none; }

.footer {
  min-height: 300px;
  background: #424242; }

/******************************************************************************
 * Module
 *
 * Modules are the reusable, modular parts of our design. They are the
 *  callouts, the sidebar sections, the products lists and so on.
 *****************************************************************************/
.navbar {
  border-radius: 0; }

nav.navcontainer {
  background-image: url("/images/saratoga.jpg"); }

nav.navbar {
  margin-bottom: 0; }
  nav.navbar.fixed {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    z-index: 1; }

.navbackground {
  background: #2196f3;
  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.75);
  -moz-box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.75);
  -webkit-box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.75); }

.pic {
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center; }

.fa.fa-minus-circle {
  color: #f44336; }

@media (max-width: 800px) {
  .navbar-nav {
    display: none; } }
